//4
procedure VaciarFilaDe_HaciaEl_(color, direcciòn){
    /*
        PROPÓSITO: Quitar todas las bolitas de color **color** de cada una de las celdas de la fila
        a partir de la celda actual, dejando el cabezal en el borde al **direcciòn**.
        PRECONDICIONES: El paràmetro **direcciòn** solo puede tomar los valores Este u Oeste.
        PARÀMETROS: 
            *color - Color - El color del cual sacar todas las bolitas de la fila en la 
        que se encuentra el cabezal.
            *direcciòn - Direcciòn - La direcciòn hacia donde se mueve el cabezal.
    */

    while(puedeMover(direcciòn)){
        SacarTodasLasDeColor_(color)
        Mover(direcciòn)
    }

    SacarTodasLasDeColor_(color)
}
//5
procedure VaciarTableroDe_(color){
    /*
        PROPÓSITO: Quitar todas las bolitas de color **color** de cada una de las celdas, 
        dejando el cabezal en la esquina Noreste.
        PRECONDICIONES: Sin precondiciones.
        PARÀMETROS: 
            *color - Color - El color del cual sacar todas las bolitas.
    */
    IrAPrimeraCeldaEnUnRecorridoAl_Y_(Este,Norte)

    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)){
        SacarTodasLasDeColor_(color)
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)
    }

    SacarTodasLasDeColor_(color)
}
//7.a
procedure PintarTableroDe_(color){
    /*
        PROPÓSITO: Pinta todo el tablero de color **color**, dejando el cabezal en la esquina Noreste.
        PRECONDICIONES: Sin precondiciones.
        PARÀMETROS: 
            *color - Color - El color con el que se pinta el tablero.
    */
    IrAPrimeraCeldaEnUnRecorridoAl_Y_(Este,Norte)

    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)){
        Poner(color)
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)
    }

    Poner(color)
}
//b
procedure PonerUnaDeCadaEnTodoElTablero(){
    /*
        PROPÓSITO: Pone una bolitas de cada color en todo el tablero, dejando el cabezal en la 
        esquina Noreste
        PRECONDICIONES: Sin precondiciones.
        OBSERVACIONES: Recorrido de procesamiento, poniendo una bolita de cada color en el tablero.
    */
    IrAPrimeraCeldaEnUnRecorridoAl_Y_
    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)){
        PonerUnaDeCada()
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)
    }

    PonerUnaDeCada()
}
//c
procedure RellenarCon_EnAusenciaDe_EnElTablero(colorAPoner, colorAMirar){
    /*
        PROPÓSITO: Rellena todas las celdas del tablero con una bolita de color **colorAPoner** si no hay bolitas de color
        **colorAMirar** en la celda en la que se encuentra el cabezal,  dejando el cabezal en la esquina Noreste.
        PRECONDICIONES: Los paràmetros **colorAPoner** y **colorAMirar** no deben ser iguales.
        PARÀMETROS: 
            *colorAPoner - Color - El color del cual poner las bolitas.
            *colorAMirar - Color - El color a evaluar en cada celda.
    */
    IrAPrimeraCeldaEnUnRecorridoAl_Y_(Este,Norte)

    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)){
        PonerBolitaDeColor_EnAusenciaDe_(colorAPoner, colorAMirar)
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)
    }

    PonerBolitaDeColor_EnAusenciaDe_(colorAPoner, colorAMirar)
}

procedure PonerBolitaDeColor_EnAusenciaDe_(colorAPoner, colorAMirar){
    /*
        PROPÓSITO: Pone una bolita de color **colorAPoner** si no hay bolitas de color **colorAMirar** en la celda actual.
        PRECONDICIONES: Los paràmetros **colorAPoner** y **colorAMirar** no deben ser iguales.
        PARÀMETROS: 
            *colorAPoner - Color - El color del cual poner la bolita.
            *colorAMirar - Color - El color a evaluar en cada celda.
    */
    if(not(hayBolitas(colorAMirar))){
        Poner(colorAPoner)
    }
}
//d
procedure CompletarHasta_De_EnElTablero(cantidad, color){
    /*
        PROPÓSITO: Completa en cada celda del tablero con bolitas de color **color** hasta llegar a la cantidad de
        **cantidad**, dejando el cabezal en la esquina Noreste.
        PRECONDICIONES: Sin precondiciones
            *color - Color - El color del cual poner las bolitas.
            *cantidad - Nùmero - Cantidad de bolitas que debe haber cada celda del tablero.
    */
    IrAPrimeraCeldaEnUnRecorridoAl_Y_(Este,Norte)

    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)){
        CompletarHasta_De_EnLaCelda(cantidad,color)
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)
    }

    CompletarHasta_De_EnLaCelda(cantidad,color)
}

procedure CompletarHasta_De_EnLaCelda(cantidad, color){
    /*
        PROPÓSITO: Completa la celda actual con bolitas de color **color** hasta llegar a la cantidad de
        **cantidad**.      
        PRECONDICIONES: Sin precondiciones.
        PARÀMETROS: 
            *color - Color - El color del cual poner las bolitas.
            *cantidad - Nùmero - Cantidad de bolitas que debe haber en la celda actual
    */
    repeat(cantidad-nroBolitas(color)){
        Poner(color)
    }
}